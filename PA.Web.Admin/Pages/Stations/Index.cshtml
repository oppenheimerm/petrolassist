@page "/Stations"
@using System.Globalization
@using PA.Core.Helpers
@using PA.Core.Helpers.Paging
@using PA.Web.Admin.Helpers

@model PA.Web.Admin.Pages.Stations.IndexModel
@{
	ViewData["Title"] = "View all Stations";
}

<!-- card starts -->
<div class="card card-nohover">
	<div class="card-body">
		<!-- card ody starts -->
		<div class="mb-3">
			<!-- header / breadcrumb -->
			<div class="container-fluid">
				<div class="row">
					<div class="col-sm">
						<div class="breadcrumb-wrap">
							<nav aria-label="breadcrumb">
								<ol class="breadcrumb">
									<li class="breadcrumb-item active" aria-current="page">Stations</li>
								</ol>
							</nav>
						</div>
					</div>
					<div class="col-sm">
						<p>
							<a asp-page="Create">Create New</a>
						</p>
					</div>
				</div>
			</div>

			<div class="row">
				<div class="col-12">
					<table class="table table-striped">
						<thead>
							<tr class="highlight">
								<th scope="col">Id</th>
								<th scope="col"><a asp-page="Index" asp-route-sortOrder="1" asp-route-pageNumber="@Model.IndexPagingParameters.PageNumber">Name</a></th>
								<th scope="col">PostCode</th>
								<th scope="col"><a asp-page="Index" asp-route-sortOrder="2" asp-route-pageNumber="@Model.IndexPagingParameters.PageNumber">Added</a>	</th>
								<th>Logo</th>
								<th>Online</th>
								<th>Actions</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var item in Model.PagedStationList.Items)
							{
								<tr>
									<th scope="row">
										@item.Id
									</th>
									<td>
										@StringHelpers.ShortenAndFormatText(item.StationName, 20)
									</td>
									<td>@item.StationPostcode</td>
									<td>@item.Added.Value.ToString("yyyy-MM-dd", CultureInfo.CreateSpecificCulture("en-GB"))</td>
									<td>
										<img class="tbl-img-logo" src="@VendorLogoHelper.GetVendorLogo(@item.Vendor.VendorLogo, VendorLogoSize.Small) " />
									</td>
									<td class="center-col">
										@if (@item.StationOnline)
										{
											<span class="material-symbols-sharp">
												done
											</span>
										}
										else
										{
											<span class="material-symbols-sharp">
												close
											</span>
										}
									</td>
									<td>
										<div class="table-actions-wrap">
											<button class="btn btn-default btn-primary btn-icon">
												<span class="material-symbols-sharp">
													visibility
												</span>
											</button>
											<button class="btn btn-default btn-warning btn-icon">
												<span class="material-symbols-sharp">
													delete
												</span>
											</button>
										</div>
									</td>

								</tr>
							}
						</tbody>
					</table>

					<div class="pagination-wrap">

						<nav aria-label="Page navigation">
							<ul class="pagination">
								@{
									if (Model.Links != null)
									{
										@foreach (var link in Model.Links)
										{
											var linkString = $"/stations?countryCode{@Model.CountryCode}&sortOrderr={Model.SortOrder}&pageNumber={link.Text}";
											string[] prev_nxt = { ">", "<" };
											if (!string.IsNullOrEmpty(link.Text))
											{
											
												<li class="page-item @(link.Enabled ? null : "disabled") @(link.Active ? "active" : null)">

													<a href="@linkString">
														<span class="page-link" href="#">@link.Text</span>
													</a>

												</li>
											}

										}
									}
									else
									{
										<span> **PAGING LINKS ERRROR** </span>
									}
								}

							</ul>
						</nav>
					</div>

				</div>
			</div>
		</div>
		<!-- card ody ends -->
	</div>

</div>
<!-- card ends -->





@section Scripts {

	<script type="text/javascript">

		var indexPage;
		var currentClickedSubmenuItem;
		var overlay;

		document.addEventListener("DOMContentLoaded", () => {
			indexPage = app();
			overlay = document.getElementById("index-overlay");
			/* Our drop down menu */
			let dropdowntarget = document.getElementById("submenu-stations");
			indexPage.displaySubMenu(dropdowntarget);
			//	subpage of stations open it's submenu
			//indexPage.targetDropDown(dropdowntarget);
		});


		//	Until this method is clicked, stringStation will be null / undefined
		function previewStation(stringStation) {
			if (stringStation === "undefined") {
				return;
			} else {
				indexPage.previewStation(stringStation, overlay, "overlay-hide", "overlay");
				//console.log(stringStation);
			}
		}


		function closeDialog() {
			overlay.classList.remove("overlay");
			overlay.classList.add("overlay-hide");
		}

		function goToDetails() {
			var id = document.getElementById("dialog_stationId").value;
			var newURl = "stations/details/" + id;
			window.location.href = newURl;
			console.log("Station Id: " + id);
		}

	</script>

}